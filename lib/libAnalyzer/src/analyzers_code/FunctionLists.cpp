#include <string>
#include <vector>

#include "analyzers_code/FunctionLists.hpp"

// Taken directly for early citl-static-analysis prototype.

std::vector<std::string> elf_funcs::good_funcs = {
    "arc4random",
    "chroot",
    "fchroot",
    "mbscpy_s",
    "mbstok_s",
    "mbstok_s_l",
    "mbstrnlen_l",
    "memcpy_s",
    "printf_s",
    "printf_s_l",
    "reallocarray",
    "sopen_s",
    "sscanf_s",
    "sscanf_s_l",
    "strcat_s",
    "strcpy_s",
    "strlcat",
    "strlcpy",
    "strnlen_s",
    "strtok_s",
    "strtok_s_l",
    "swscanf_s",
    "swscanf_s_l",
    "wcscpy_s",
    "wcsnlen_s",
    "wcstok_s",
    "wcstok_s_l",
    "wprintf_s",
    "wprintf_s_l",
    "wsopen_s",
    "xrealloc"
};

std::vector<std::string> elf_funcs::risky_funcs = {
    "bcopy",
    "cgets",
    "chmod",
    "chown",
    "cscanf",
    "cwscanf",
    "execl",
    "execle",
    "execlp",
    "execlpe",
    "exect",
    "execv",
    "execve",
    "execvp",
    "execvpe",
    "fchmod",
    "fchown",
    "fgets",
    "fscanf",
    "fwscanf",
    "getenv",
    "GetEnvironmentVariable",
    "initstate",
    "longjmp",
    "malloc",
    "mbscpy",
    "mbslen",
    "mbslen_l",
    "mbstok",
    "mbstok_l",
    "mbstrlen",
    "mbstrlen_l",
    "memcpy",
    "mktemp",
    "open",
    "popen",
    "random",
    "realloc",
    "realpath",
    "scanf",
    "seh_longjmp_unwind",
    "select",
    "setjmp",
    "setjmp3",
    "setstate",
    "siglongjmp",
    "sigsetjmp",
    "snprintf",
    "snscanf",
    "snwscanf",
    "srandom",
    "stat",
    "stat64",
    "stati64",
    "stat$INODE64",
    "strdup",
    "strlen",
    "strncat",
    "strncpy",
    "strtok",
    "strtok_l",
    "strtrns",
    "tmpfile",
    "tmpnam",
    "tmpnam_r",
    "vscanf",
    "vsprintf",
    "vsscanf",
    "vswprintf",
    "vwprintf",
    "wcscat",
    "wcscpy",
    "wcscspn",
    "wcslen",
    "wcstok",
    "wcstok_l",
    "wexecl",
    "wexecle",
    "wexeclp",
    "wexeclpe",
    "wgetenv",
    "wmktemp",
    "wopen",
    "wpopen",
    "wscanf",
    "wsopen",
    "wstat",
    "wstat32",
    "wstat64",
    "wstati64",
    "wtempnam",
    "wtmpnam"
};

std::vector<std::string> elf_funcs::bad_funcs = {
    "access",
    "getstr",
    "rand",
    "rand_r",
    "sprintf",
    "srand",
    "sranddev",
    "sscanf",
    "sscanf_l",
    "isoc99_sscanf",
    "stpcpy",
    "strcadd",
    "strcat",
    "strccpy",
    "strcpy",
    "streadd",
    "strecpy",
    "swscanf",
    "swscanf_l",
    "waccess"
};

std::vector<std::string> elf_funcs::ick_funcs = {
    "_gets",
    "_system",
    "_wsystem",
    "gets",
    "system",
    "wsystem"
};


std::vector<std::string> pe_funcs::good_funcs = {
    "_arc4random",
    "_chroot",
    "_fchroot",
    "_fopen_s",
    "_fwscanf_s",
    "_getenv_s",
    "_sopen_s",
    "_snprintf_s",
    "_snscanf_s",
    "_snwscanf_s",
    "strncat_s",
    "_strncat_s",
    "_strncpy_s",
    "_vsnprintf_s",
    "__stdio_common_vsnprintf_s",
    "_o___stdio_common_vsnprintf_s",
    "_vsprintf_s",
    "StringCbPrintf",
    "StringCbPrintfEx",
    "StringCchPrintf",
    "StringCchPrintfEx",
    "_o___stdio_common_vsprintf_s",
    "_vswprintf_s",
    "_o___stdio_common_vswprintf_s",
    "_wcscat_s",
    "_o_wcscat_s",
    "_wcscpy_s",
    "_o_wcscpy_s",
    "_wfopen_s",
    "_o_fopen_s",
    "_wfopen_s",
    "_wgetenv_s",
    "_wsopen_s",
    "arc4random",
    "chroot",
    "fchroot",
    "fopen_s",
    "fwscanf_s",
    "getenv_s",
    "sscanf_s",
    "strncpy_s",
    "swscanf_s",
    "vwprintf_s",
    "wcscat_s",
    "_strlcat",
    "_strlcpy",
    "strcpy_s",
    "strcat_s",
    "_strcpy_s",
    "_strcat_s",
    "calloc",
    "_calloc",
    "reallocarray",
    "_reallocarray",
    "xrealloc",
    "_xrealloc",
    "memcpy_s",
    "_memcpy_s",
    "_o_memcpy_s",
    "_o_wmemcpy_s",
    "_sscanf_s",
    "_sscanf_s_l",
    "_swscanf_s",
    "_swscanf_s_l",
    "strtok_s",
    "_strtok_s_l",
    "wcstok_s",
    "_wcstok_s_l",
    "_o_wcstok_s",
    "_mbstok_s",
    "_mbstok_s_l",
    "strnlen",
    "strnlen_s",
    "wcsnlen",
    "wcsnlen_s",
    "_mbsnlen",
    "_mbsnlen_l",
    "_mbstrnlen",
    "_mbstrnlen_l",
    "printf_s",
    "_printf_s_l",
    "wprintf_s",
    "_wprintf_s_l",
    "strcpy_s",
    "wcscpy_s",
    "_mbscpy_s",
    "StringCbLength",
    "StringCchLength"
};

std::vector<std::string> pe_funcs::risky_funcs = {
    "GetEnvironmentVariable",
    "GetEnvironmentVariableA",
    "GetEnvironmentVariableW",
    "_GetEnvironmentVariable",
    "_bcopy",
    "_cgets",
    "_chmod",
    "_o__wchmod",
    "_chown",
    "_cscanf",
    "_cwscanf",
    "_execl",
    "_execle",
    "_execlp",
    "_execlpe",
    "_exect",
    "_execv",
    "_execve",
    "_execvp",
    "_execvpe",
    "_fchmod",
    "_fchown",
    "_fgets",
    "_fopen",
    "_fscanf",
    "__stdio_common_vswscanf",
    "_o___stdio_common_vfscanf",
    "_o___stdio_common_vsscanf",
    "_o___stdio_common_vswscanf",
    "_fwscanf",
    "_getenv",
    "_initstate",
    "_longjmp",
    "_memcpy",
    "_wmemcpy",
    "_mktemp",
    "_open",
    "_sopen",
    "_popen",
    "_random",
    "_realpath",
    "_scanf",
    "_seh_longjmp_unwind",
    "_select",
    "_setjmp",
    "_setjmp3",
    "_setstate",
    "_siglongjmp",
    "_sigsetjmp",
    "_snprintf",
    "_snscanf",
    "_snwscanf",
    "_srandom",
    "_stat",
    "_stat$INODE64",
    "_stat64",
    "_stati64",
    "strncat",
    "_strncat",
    "_strncpy",
    "_strtrns",
    "_tmpfile",
    "_tmpnam",
    "_tmpnam_r",
    "_vscanf",
    "_vsnprintf",
    "_vsprintf",
    "_o___stdio_common_vsprintf",
    "_o___stdio_common_vswprintf",
    "_vsprintf_p_l",
    "_vswprintf_p_l",
    "_vswprintf",
    "_vwprintf",
    "_wchmod",
    "_wcscat",
    "_wcscpy",
    "_wcscspn",
    "_wexecl",
    "_wexecle",
    "_wexeclp",
    "_wexeclpe",
    "_wfdopen",
    "_wfopen",
    "_o_fopen",
    "_wfreopen",
    "_wfsopen",
    "_o__wfopen",
    "_o__fsopen",
    "_o__wfsopen",
    "_wgetenv",
    "_wmktemp",
    "_wopen",
    "_wpopen",
    "_wscanf",
    "_wsopen",
    "_wstat",
    "_wstat32",
    "_o__wstat64i32",
    "_wstat64",
    "_wstati64",
    "_wtempnam",
    "_wtmpnam",
    "bcopy",
    "chmod",
    "chown",
    "execl",
    "execle",
    "execlp",
    "exect",
    "execv",
    "execve",
    "execvp",
    "fchmod",
    "fchown",
    "fgets",
    "fopen",
    "freopen",
    "fscanf",
    "fwscanf",
    "getenv",
    "initstate",
    "longjmp",
    "memcpy",
    "wmemcpy",
    "mktemp",
    "open",
    "popen",
    "random",
    "realpath",
    "scanf",
    "select",
    "setjmp",
    "setstate",
    "siglongjmp",
    "sigsetjmp",
    "snprintf",
    "srandom",
    "stat",
    "strncpy",
    "strtrns",
    "tmpfile",
    "tmpnam",
    "tmpnam_r",
    "vscanf",
    "vsprintf",
    "vswprintf",
    "vwprintf",
    "wcscat",
    "wcscpy",
    "wcscspn",
    "wscanf",
    "strdup",
    "_strdup",
    "_stdup_dbg",
    "malloc",
    "_malloc",
    "aligned_malloc",
    "_aligned_malloc",
    "aligned_offset_malloc",
    "_aligned_offset_malloc",
    "malloc_base",
    "_malloc_base",
    "malloc_crt",
    "_malloc_crt",
    "malloc_dbg",
    "_malloc_dbg",
    "_o__aligned_malloc",
    "_o__malloc_base",
    "_o_malloc",
    "realloc",
    "_realloc",
    "_o__realloc_base",
    "_o_realloc",
    "_realloc_base",
    "_realloc_crt",
    "_realloc_dbg",
    "alloca",
    "_alloca",
    "strtok",
    "_strtok_l",
    "wcstok",
    "_wcstok_l",
    "_mbstok",
    "_mbstok_l",
    "strlen",
    "lstrlenA",
    "lstrlenW",
    "wcslen",
    "_mbslen",
    "_mbslen_l",
    "_mbstrlen",
    "_mbstrlen_l",
    "_mbscpy",
    "mbscpy",
    "calloc",
    "_calloc",
    "CopyMemory",
    "_CopyMemory",
    "RtlCopyMemory",
    "_RtlCopyMemory"
};

std::vector<std::string> pe_funcs::bad_funcs = {
    "_access",
    "_getstr",
    "_rand",
    "_rand_r",
    "_sprintf",
    "_srand",
    "_sranddev",
    "_sscanf",
    "_sscanf_l",
    "_strcadd",
    "_strcat",
    "_strccpy",
    "_strcpy",
    "_stpcpy",
    "_streadd",
    "_strecpy",
    "_swscanf",
    "_swscanf_l",
    "wsprintf",
    "_wsprintf",
    "wvsprintfW",
    "_wvsprintfW",
    "wvsprintf",
    "_wvsprintf",
    "_vsscanf",
    "__stdio_common_vsscanf",
    "_waccess",
    "access",
    "getstr",
    "rand",
    "rand_r",
    "sprintf",
    "srand",
    "sranddev",
    "sscanf",
    "strcadd",
    "strcat",
    "strccpy",
    "strcpy",
    "stpcpy",
    "streadd",
    "strecpy",
    "swscanf",
    "vsscanf"
};

std::vector<std::string> pe_funcs::ick_funcs = {
    "_gets",
    "_system",
    "_wsystem",
    "gets",
    "system"
};

std::vector<std::string> macho_funcs::good_funcs = {
    "_arc4random",
    "_chroot",
    "_fchroot",
    "_sopen_s",
    "_wsopen_s",
    "arc4random",
    "chroot",
    "fchroot",
    "strlcat",
    "strlcpy",
    "_strlcat",
    "_strlcpy",
    "strndup",
    "_strndup",
    "strcpy_s",
    "strcat_s",
    "_strcpy_s",
    "_strcat_s",
    "reallocarray",
    "_reallocarray",
    "xrealloc",
    "_xrealloc",
    "calloc",
    "_calloc",
    "memcpy_s",
    "_memcpy_s",
    "_sscanf_s",
    "_sscanf_s_l",
    "_swscanf_s",
    "_swscanf_s_l",
    "strtok_s",
    "_strtok_s_l",
    "wcstok_s",
    "_wcstok_s_l",
    "_mbstok_s",
    "_mbstok_s_l",
    "strnlen",
    "strnlen_s",
    "wcsnlen",
    "wcsnlen_s",
    "_mbsnlen",
    "_mbsnlen_l",
    "_mbstrnlen",
    "_mbstrnlen_l",
    "printf_s",
    "_printf_s_l",
    "wprintf_s",
    "_wprintf_s_l",
    "strcpy_s",
    "wcscpy_s",
    "_mbscpy_s"
};

std::vector<std::string> macho_funcs::risky_funcs = {
    "_bcopy",
    "_cgets",
    "_chmod",
    "_chown",
    "_cscanf",
    "_cwscanf",
    "_execl",
    "_execle",
    "_execlp",
    "_execlpe",
    "_exect",
    "_execv",
    "_execve",
    "_execvp",
    "_execvpe",
    "_fchmod",
    "_fchown",
    "_fgets",
    "_fscanf",
    "_fwscanf",
    "_getenv",
    "_initstate",
    "_longjmp",
    "_memcpy",
    "_mktemp",
    "_open",
    "_popen",
    "_random",
    "_realpath",
    "_scanf",
    "_select",
    "_setjmp",
    "_setjmp3",
    "_setstate",
    "_siglongjmp",
    "_sigsetjmp",
    "_snprintf",
    "_snscanf",
    "_snwscanf",
    "_srandom",
    "_stat",
    "_stat$INODE64",
    "_stat64",
    "_stati64",
    "_strncat",
    "_strncpy",
    "_strdup",
    "_strtrns",
    "_tmpfile",
    "_tmpnam",
    "_tmpnam_r",
    "_vscanf",
    "_vsprintf",
    "_vsscanf",
    "_vswprintf",
    "_vwprintf",
    "_wcscat",
    "_wcscpy",
    "_wcscspn",
    "_wexecl",
    "_wexecle",
    "_wexeclp",
    "_wexeclpe",
    "_wgetenv",
    "_wmktemp",
    "_wopen",
    "_wpopen",
    "_wscanf",
    "_wsopen",
    "_wstat",
    "_wstat32",
    "_wstat64",
    "_wstati64",
    "_wtempnam",
    "_wtmpnam",
    "bcopy",
    "chmod",
    "chown",
    "execl",
    "execle",
    "execlp",
    "exect",
    "execv",
    "execve",
    "execvp",
    "fchmod",
    "fchown",
    "fgets",
    "fscanf",
    "fwscanf",
    "getenv",
    "initstate",
    "longjmp",
    "memcpy",
    "mktemp",
    "open",
    "popen",
    "random",
    "realpath",
    "scanf",
    "select",
    "setjmp",
    "setstate",
    "siglongjmp",
    "sigsetjmp",
    "snprintf",
    "srandom",
    "stat",
    "strncpy",
    "strdup",
    "strtrns",
    "tmpfile",
    "tmpnam",
    "tmpnam_r",
    "vscanf",
    "vsprintf",
    "vsscanf",
    "vswprintf",
    "vwprintf",
    "wcscat",
    "wcscpy",
    "wcscspn",
    "wscanf",
    "malloc",
    "_malloc",
    "brk",
    "_brk",
    "sbrk",
    "_sbrk",
    "realloc",
    "_realloc",
    "strtok",
    "_strtok_l",
    "wcstok",
    "_wcstok_l",
    "_mbstok",
    "_mbstok_l",
    "strlen",
    "wcslen",
    "_mbslen",
    "_mbslen_l",
    "_mbstrlen",
    "_mbstrlen_l",
    "_mbscpy",
    "mbscpy"
};

std::vector<std::string> macho_funcs::bad_funcs = {
    "_access",
    "_getstr",
    "_rand",
    "_rand_r",
    "_sprintf",
    "_srand",
    "_sranddev",
    "_sscanf",
    "_sscanf_l",
    "_strcadd",
    "_strcat",
    "_strccpy",
    "_strcpy",
    "_stpcpy",
    "_streadd",
    "_strecpy",
    "_swscanf",
    "_swscanf_l",
    "_waccess",
    "access",
    "getstr",
    "rand",
    "rand_r",
    "sprintf",
    "srand",
    "sranddev",
    "sscanf",
    "strcadd",
    "strcat",
    "strccpy",
    "strcpy",
    "stpcpy",
    "streadd",
    "strecpy",
    "swscan"
};

std::vector<std::string> macho_funcs::ick_funcs = {
    "_gets",
    "_system",
    "_wsystem",
    "gets",
    "system",
    "wsystem"
};
